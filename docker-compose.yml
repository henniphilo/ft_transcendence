services:
  postgres:
    image: "postgres:16"
    container_name: ft_transcendence_postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: transcendence
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transcendence_network

  redis:
    image: "redis:alpine"
    container_name: ft_transcendence_redis
    restart: always
    networks:
      - transcendence_network
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  backend:
    build:
      context: ./src/ft_transcendence_backend
      dockerfile: dockerfile
    container_name: ft_transcendence_backend
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/transcendence
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - transcendence_network
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  game:
    build:
      context: ./src/ft_transcendence_backend/game
      dockerfile: dockerfile
    container_name: ft_transcendence_game
    restart: always
    command: python3 -m uvicorn pong_game:app --host 0.0.0.0 --port 8001 --reload
    networks:
      - transcendence_network
    ports:
      - "8001:8001"

  caddy:
    build:
      context: ./src/
      dockerfile: caddy/Dockerfile
    container_name: ft_transcendence_caddy
    restart: always
    depends_on:
      - backend
    networks:
      - transcendence_network
    ports:
      - "8080:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/otel-lgtm
    container_name: grafana
    ports:
      - "3000:3000"
      - "4317:4317"
      - "4318:4318"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DEFAULT_THEME=dark
    networks:
      - transcendence_network
    volumes:
      - grafana_data:/var/lib/grafana


volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  transcendence_network:
    driver: bridge
