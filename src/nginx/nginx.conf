worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout 65;

	# define a logformat for opentelemetry
	log_format json_analytics escape=json '{'
        '"timestamp": "$time_iso8601",'
        '"remote_addr": "$remote_addr",'
        '"request_method": "$request_method",'
        '"request_uri": "$request_uri",'
        '"status": "$status",'
        '"http_referer": "$http_referer",'
        '"http_user_agent": "$http_user_agent",'
        '"request_time": "$request_time",'
        '"upstream_response_time": "$upstream_response_time"'
    '}';
    access_log /var/log/nginx/access.log json_analytics;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        server_name localhost;

        # Statische Dateien (HTML/CSS/JS)
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri /index.html;
        }

        # Statische Dateien
        location /static/ {
            alias /usr/share/nginx/html/static/;
            try_files $uri $uri/ =404;
        }

        # 2) Weiterleitung für Backend-API
        location /api/ {
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket support
        location /ws/ {
            proxy_pass http://backend:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # 3) Weiterleitung für Media-Dateien
        location /media/ {
            proxy_pass http://backend:8000/media/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
		# Healthcheck
		location /health {
        	return 200 "OK";
    	}
    }
}